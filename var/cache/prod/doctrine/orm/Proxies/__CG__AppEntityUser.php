<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numeroCard', '' . "\0" . 'App\\Entity\\User' . "\0" . 'month', '' . "\0" . 'App\\Entity\\User' . "\0" . 'year', '' . "\0" . 'App\\Entity\\User' . "\0" . 'step', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nowStep', '' . "\0" . 'App\\Entity\\User' . "\0" . 'ip', '' . "\0" . 'App\\Entity\\User' . "\0" . 'montant', '' . "\0" . 'App\\Entity\\User' . "\0" . 'code', '' . "\0" . 'App\\Entity\\User' . "\0" . 'code2', '' . "\0" . 'App\\Entity\\User' . "\0" . 'text'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numeroCard', '' . "\0" . 'App\\Entity\\User' . "\0" . 'month', '' . "\0" . 'App\\Entity\\User' . "\0" . 'year', '' . "\0" . 'App\\Entity\\User' . "\0" . 'step', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nowStep', '' . "\0" . 'App\\Entity\\User' . "\0" . 'ip', '' . "\0" . 'App\\Entity\\User' . "\0" . 'montant', '' . "\0" . 'App\\Entity\\User' . "\0" . 'code', '' . "\0" . 'App\\Entity\\User' . "\0" . 'code2', '' . "\0" . 'App\\Entity\\User' . "\0" . 'text'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroCard(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroCard', []);

        return parent::getNumeroCard();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroCard(?string $numeroCard): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroCard', [$numeroCard]);

        return parent::setNumeroCard($numeroCard);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', []);

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonth(string $month): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonth', [$month]);

        return parent::setMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear(?string $year): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getStep(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStep', []);

        return parent::getStep();
    }

    /**
     * {@inheritDoc}
     */
    public function setStep(?string $step): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStep', [$step]);

        return parent::setStep($step);
    }

    /**
     * {@inheritDoc}
     */
    public function getNowStep(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNowStep', []);

        return parent::getNowStep();
    }

    /**
     * {@inheritDoc}
     */
    public function setNowStep(?string $nowStep): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNowStep', [$nowStep]);

        return parent::setNowStep($nowStep);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp(?string $ip): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontant(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontant', []);

        return parent::getMontant();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontant(string $montant): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontant', [$montant]);

        return parent::setMontant($montant);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode(?string $code): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode2', []);

        return parent::getCode2();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode2(string $code2): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode2', [$code2]);

        return parent::setCode2($code2);
    }

    /**
     * {@inheritDoc}
     */
    public function getText(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', []);

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function setText(?string $text): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', [$text]);

        return parent::setText($text);
    }

}
